{"variants":[{"paths":["\/documentation\/vigramsdk\/step4settingupbluetoothservice"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"]]},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"After completing ","type":"text"},{"inlineContent":[{"isActive":true,"overridingTitle":"the authentication procedure","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"the authentication procedure"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step2SDKAuthentication"}],"type":"strong"},{"text":", and ","type":"text"},{"inlineContent":[{"isActive":true,"overridingTitle":"the configuration flag settings","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"the configuration flag settings"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step3ConfigurationParameters"}],"type":"strong"},{"text":" you need to create the Bluetooth service and configure it. Let’s move on to these actions.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"A BluetoothService is used to handle bluetooth connections. See ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/corebluetooth","type":"reference"},{"text":" for more information.","type":"text"}]},{"name":"Note","type":"aside","content":[{"inlineContent":[{"text":"Your app will crash if its ","type":"text"},{"code":"Info.plist","type":"codeVoice"},{"text":" doesn’t include usage description keys for the types of data it needs to access.","type":"text"},{"text":"\n","type":"text"},{"text":"To access Core Bluetooth APIs:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On apps linked on or after iOS 13, include the "},{"type":"codeVoice","code":"NSBluetoothAlwaysUsageDescription"},{"type":"text","text":" key."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On iOS 12 and earlier, include "},{"type":"codeVoice","code":"NSBluetoothPeripheralUsageDescription"},{"type":"text","text":"."}]}]}],"type":"unorderedList"}],"style":"note"},{"text":"Step 1. Create an instance of the BluetoothService.","level":3,"anchor":"Step-1-Create-an-instance-of-the-BluetoothService","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This service is required to work with the smartphone’s Bluetooth module (BLE).","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["    var bluetoothService = Vigram.bluetoothService()"]},{"text":"Step 2. Run a scan to find RTK devices.","level":3,"anchor":"Step-2-Run-a-scan-to-find-RTK-devices","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"You need to start searching for Bluetooth devices","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["    bluetoothService.startScan()"]},{"type":"paragraph","inlineContent":[{"text":"startScan() can be called to start the scanning process for bluetooth peripherals.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Once bluetooth capabilities are available, the service internally calls startScan() automatically.","type":"text"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Note:","type":"text"}],"type":"strong"},{"text":" Don’t forget to include the appropriate permissions in the .plist file above. Otherwise, bluetooth will be blocked by iOS.","type":"text"}]},{"type":"paragraph","inlineContent":[{"identifier":"fig13.png","type":"image"}]},{"text":"Step 3. Subscribe to the observeAvailableDevices publisher, which provides a list of discovered RTK devices.","level":3,"anchor":"Step-3-Subscribe-to-the-observeAvailableDevices-publisher-which-provides-a-list-of-discovered-RTK-devices","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"It is not possible to connect directly to viDoc without using Apple system libraries. Therefore, before connecting to viDoc (Peripheral), you need to find the corresponding CBPeripheral device and connect to it using CoreBluetooth - Apple’s library for working with Bluetooth.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["    var subscription = Set<AnyCancellable>()","    ","    \/\/ A constant that stores a reference to the device we will ","    \/\/ to connect.","    let device: CBPeripheral ","","    bluetoothService.observeAvailableDevices()","        .sink { [weak self] devices in","            \/\/ the return value stores an array of found devices","            \/\/ (if no devices are found, it will return an empty array)","            if let firstDevice = devices.first {","                \/\/ We will connect to the first device found.","                self?.device = firstDevice ","            }","        }.store(in: &subscription)"]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Return value:","type":"text"}],"type":"strong"},{"text":" [CBPeripheral]","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"See ","type":"text"},{"overridingTitle":"CoreBluetooth","isActive":true,"overridingTitleInlineContent":[{"text":"CoreBluetooth","type":"text"}],"identifier":"https:\/\/developer.apple.com\/documentation\/corebluetooth","type":"reference"},{"text":" for more information.","type":"text"}]},{"text":"Step 4. Create a Peripheral instance.","level":3,"anchor":"Step-4-Create-a-Peripheral-instance","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Once we have found the required device (CBPeripheral instance), we can create a Peripheral instance to work with viDoc functions and connect to it.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["    \/\/ A constant that stores a reference to the device we will ","    \/\/ to connect.","    let device: CBPeripheral ","","    \/\/ A variable that stores a reference to RTK device (our viDoc)","    var peripheral = Vigram.peripheral(device)"]},{"type":"paragraph","inlineContent":[{"text":"If you want to log viDoc’s work, create a log file.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"A detailed description can be found in the ","type":"text"},{"inlineContent":[{"isActive":true,"overridingTitle":"Use Peripheral Logger section.","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Use Peripheral Logger section."}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePeripheralLogger"}],"type":"strong"}]},{"syntax":"swift","type":"codeListing","code":["    \/\/ A constant that stores a reference to the device we will ","    \/\/ to connect.","    let device: CBPeripheral ","","    \/\/ A variable that stores a reference to RTK device (our viDoc)","    var peripheral: Periperal?","","    \/\/ A constant that stores a log file path","    let logFile = createLogFile(nameDevice: device.name, ","                                fileExtension: \"txt\", folder: \"LOG\")","","    \/\/ Try to create peripheral instance","    do {","        try peripheral = Vigram.peripheral(device, log: logFile)","    } catch {","        \/\/ Do something with error","    }"]},{"type":"paragraph","inlineContent":[{"text":"If you want to use a custom configuration, create one.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For more information, see ","type":"text"},{"inlineContent":[{"isActive":true,"overridingTitle":"Use the Peripheral Configuration.","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Use the Peripheral Configuration."}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePeripheralConfiguration"}],"type":"strong"}]},{"syntax":"swift","type":"codeListing","code":["    \/\/ A constant that stores a reference to the device we will ","    \/\/ to connect.","    let device: CBPeripheral ","","    \/\/ A constant that stores a peripheral configuration","    let peripheralConfiguration = ","            PeripheralConfiguration(rateOfChangeMessages: .hertz7,","                                    dynamicType: .stationary)","","    \/\/ A constant that stores a reference to RTK device (our viDoc)","    let peripheral = ","            Vigram.peripheral(device, ","                              configuration: peripheralConfiguration)"]},{"type":"paragraph","inlineContent":[{"text":"Or with logger and configuration:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["    \/\/ A variable that stores a reference to the device we will ","    \/\/ to connect.","    let device: CBPeripheral ","","    \/\/ A variable that stores a reference to RTK device (our viDoc)","    var peripheral: Periperal?","","    let peripheralConfiguration = ","        PeripheralConfiguration(rateOfChangeMessages: .hertz7,","                                dynamicType: .stationary)","","    do {","        try peripheral = ","            Vigram.peripheral(device, log: logFile,","                              configuration: peripheralConfiguration)","    } catch {","        \/\/ Do something with error","    }"]},{"text":"Step 5. Connecting to CBPeripheral and starting communication with Peripheral","level":3,"anchor":"Step-5-Connecting-to-CBPeripheral-and-starting-communication-with-Peripheral","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"After creating an instance of the Peripheral class and determining the current CBPeripheral device, it is necessary to connect to the CBPeripheral and start exchanging messages with the Peripheral.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Combine publishers set","var subscription = Set<AnyCancellable>()","","\/\/ A constant that stores a reference to the device we will ","\/\/ to connect.","let device: CBPeripheral ","","\/\/ A constant that stores a reference to RTK device (our viDoc)","let peripheral: Peripheral","","\/\/ Connect to current device","bluetoothService.connect(to: device.identifier)","    .sink(receiveCompletion: { [weak self] completion in","        switch completion {","        case .finished:","            \/\/ Connect successful","            guard let self else { return }","            \/\/ Start exchanging messages with the Peripheral","            self.peripheral","                .start()","                .sink(receiveCompletion: { completion in","                    switch completion {","                    case .finished: ","                        \/\/ Successful connection. ","                        \/\/ You can send requests and read responces ","                        \/\/ from the viDoc.","                        break","                    case .failure(let error):","                        \/\/ Error connect to Peripheral","                    }","                }) { _ in }.store(in: &self.subscription)","        case .failure(let error):","            \/\/ Error connect to CBPeripheral","    }","}){ currentCBPeripheral in ","    \/\/ do something with value","}.store(in: &subscription)"]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Throw error:","type":"text"}],"type":"strong"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/PeripheralError","type":"reference"}]},{"text":"Step 6. Disconnecting from the device","level":3,"anchor":"Step-6-Disconnecting-from-the-device","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"To finish working with the device, you need to break the connection.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["bluetoothService.disconnect()"]},{"type":"paragraph","inlineContent":[{"text":"The full listing is presented below","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import Combine","import CoreBluetooth","import VigramSDK","","final class YouVigramHelper: NSObject {","","    \/\/ Stored properties","","    private var subscription = Set<AnyCancellable>()","    private var peripheral: Peripheral?","    private var bluetoothService: BluetoothService?","    private var currentDevice: CBPeripheral?","","    \/\/ Init","","    public init() {","        super.init()","","        \/\/ Previous step 2. Can be moved to a separate function.","        func authenticationSDK()","","        \/\/ Previous step 3. Can be moved to a separate function.","        func setDefaultParametres()","    }","","    deinit {","        subscription.removeAll()","    }","","    \/\/ Private methods","","    private func setDefaultParametres() {","        Configuration.defaultRate = .hertz7","    }","","    private func authenticationSDK() {","        Vigram.initial(token: \"Your token\")","            .check()","            .receive(on: DispatchQueue.main)","            .sink(receiveCompletion: { completion in","                switch completion {","                case .finished:","                    \/\/ Successful authentication","                    \/\/ You can send requests and read responces ","                    \/\/ from the viDoc.","                    break","                case .failure(let error):","                    \/\/ Authentication failure   ","                    \/\/ AuthenticationError received","                    \/\/ Do something with error","                    print(error.localizedDescription)","                }","            }) { [weak self] resultAuthentication in","                \/\/ Received value: Result<Bool, AuthenticationError>","                switch resultAuthentication {","                    case .success:","                        \/\/ Successful authentication","                        self?.bluetoothService = Vigram.bluetoothService()","                        self?.startScanBluetooth()","                    case .failure(let error):","                        \/\/ Authentication failure","                        print(error.localizedDescription)","                }","            }.store(in: &subscription)","    }","","    private func startScanBluetooth() {","        bluetoothService?.startScan()","        bluetoothService?.observeAvailableDevices()","            .sink { [weak self] devices in","                \/\/ Array of available RTK Devices","                \/\/ Received value: [CBPeripheral]","                self?.currentDevice = devices.first","            }.store(in: &subscription)","    }","","    \/\/ Public methods","","    func conectToDevice() {","        let logFile = createLogFile(nameDevice: peripheral.name, ","                                    fileExtension: \"txt\", folder: \"LOG\")","","        do {","            try self.peripheral = Vigram.peripheral(peripheral,","                                                    log: logFile)","        } catch {","            print(error.localizedDescription)","        }","","        guard let currentDevice else { ","            print(\"Device not found\")","            return ","        }","","        bluetoothService?.connect(to: currentDevice.identifier)","            .sink(receiveCompletion: { [weak self] completion in","                switch completion {","                case .finished:","                    \/\/ Connect successful","                    guard let self else { return }","                    self.peripheral?","                        .start()","                        .sink(receiveCompletion: { completion in","                            switch completion {","                            case .finished: ","                                \/\/ Successful connection. ","                                \/\/ You can send requests and read ","                                \/\/ responces from the viDoc.","                                break","                            case .failure(let error):","                                \/\/ Error connect to Peripheral","                                print(error.localizedDescription)","                            }","                        }) { _ in }.store(in: &self.subscription)","                case .failure(let error):","                    \/\/ Error connect to CBPeripheral","                    print(error.localizedDescription)","            }","        }){ _ in }.store(in: &subscription)","    }","","    func disconnect(){","        bluetoothService?.disconnect()","        peripheral = nil","        currentDevice = nil","        startScanBluetooth()","    }","}"]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Throw error:","type":"text"}],"type":"strong"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/PeripheralError","type":"reference"}]},{"type":"paragraph","inlineContent":[{"text":"This completes the Setting up Bluetooth service.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The next step is ","type":"text"},{"inlineContent":[{"isActive":true,"overridingTitle":"Work with viDoc (Peripheral)","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Work with viDoc (Peripheral)"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step5WorkWithPeripheral"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"All methods and functions specified in this manual are also available in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/vigram-sw\/SDK_iOS_viDoc_Distribution\/tree\/demo\/"}],"type":"emphasis"}]},{"text":"More information about","level":3,"anchor":"More-information-about","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/combine"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","overridingTitle":"CoreBluetooth Documentation","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/corebluetooth","overridingTitleInlineContent":[{"type":"text","text":"CoreBluetooth Documentation"}]}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","overridingTitle":"Using Combine and Publishers","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UseCombineAndPublishers","overridingTitleInlineContent":[{"type":"text","text":"Using Combine and Publishers"}]}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","overridingTitle":"SDK Errors and exceptions","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/SDKErrorsAndExceptions","overridingTitleInlineContent":[{"type":"text","text":"SDK Errors and exceptions"}]}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","overridingTitle":"Demo repository","isActive":true,"identifier":"https:\/\/github.com\/vigram-sw\/SDK_iOS_viDoc_Distribution\/tree\/demo\/","overridingTitleInlineContent":[{"type":"text","text":"Demo repository"}]}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Navigation","level":2,"anchor":"Navigation","type":"heading"},{"type":"paragraph","inlineContent":[{"overridingTitle":"Up to Getting started with VigramSDK","isActive":true,"overridingTitleInlineContent":[{"text":"Up to Getting started with VigramSDK","type":"text"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/GettingStarted","type":"reference"}]},{"type":"paragraph","inlineContent":[{"overridingTitle":"✅ STEP 1 (Import VigramSDK)","isActive":true,"overridingTitleInlineContent":[{"text":"✅ STEP 1 (Import VigramSDK)","type":"text"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step1GettingStarted","type":"reference"}]},{"type":"paragraph","inlineContent":[{"overridingTitle":"✅ STEP 2 (SDK Authentication)","isActive":true,"overridingTitleInlineContent":[{"text":"✅ STEP 2 (SDK Authentication)","type":"text"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step2SDKAuthentication","type":"reference"}]},{"type":"paragraph","inlineContent":[{"overridingTitle":"✅ STEP 3 (Description of configuration parameters)","isActive":true,"overridingTitleInlineContent":[{"text":"✅ STEP 3 (Description of configuration parameters)","type":"text"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step3ConfigurationParameters","type":"reference"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"✅ STEP 4 (Setting up Bluetooth service)","type":"text"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"overridingTitle":"STEP 5 (Work with viDoc (Peripheral))","isActive":true,"overridingTitleInlineContent":[{"text":"STEP 5 (Work with viDoc (Peripheral))","type":"text"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step5WorkWithPeripheral","type":"reference"}]},{"type":"paragraph","inlineContent":[{"overridingTitle":"STEP 6 (Using NTRIP correction)","isActive":true,"overridingTitleInlineContent":[{"text":"STEP 6 (Using NTRIP correction)","type":"text"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step6UsingNTRIP","type":"reference"}]},{"type":"paragraph","inlineContent":[{"overridingTitle":"STEP 7 (Using LaserService)","isActive":true,"overridingTitleInlineContent":[{"text":"STEP 7 (Using LaserService)","type":"text"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step7LaserService","type":"reference"}]},{"type":"paragraph","inlineContent":[{"overridingTitle":"STEP 8 (Using SinglePoint Measurements)","isActive":true,"overridingTitleInlineContent":[{"text":"STEP 8 (Using SinglePoint Measurements)","type":"text"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step8SinglePoint","type":"reference"}]}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step4SettingUpBluetoothService"},"kind":"article","metadata":{"roleHeading":"Article","modules":[{"name":"VigramSDK"}],"title":"Setting up Bluetooth service","role":"article","images":[{"type":"icon","identifier":"logo.png"}]},"references":{"fig13.png":{"identifier":"fig13.png","alt":"Fig.1","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.vigram.VigramSDK\/fig13.png"}]},"doc://com.vigram.VigramSDK/documentation/VigramSDK/UseCombineAndPublishers":{"kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Using Combine and Publishers","abstract":[],"role":"article","type":"topic","url":"\/documentation\/vigramsdk\/usecombineandpublishers","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UseCombineAndPublishers"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Step6UsingNTRIP":{"title":"Using NTRIP correction","abstract":[],"role":"article","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step6UsingNTRIP","kind":"article","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/vigramsdk\/step6usingntrip"},"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/vigramsdk","type":"topic","title":"VigramSDK","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Step3ConfigurationParameters":{"type":"topic","abstract":[],"role":"article","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step3ConfigurationParameters","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/vigramsdk\/step3configurationparameters","title":"Description of configuration parameters"},"https://developer.apple.com/documentation/corebluetooth":{"identifier":"https:\/\/developer.apple.com\/documentation\/corebluetooth","type":"link","titleInlineContent":[{"type":"text","text":"CoreBluetooth"}],"title":"CoreBluetooth","url":"https:\/\/developer.apple.com\/documentation\/corebluetooth"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Step2SDKAuthentication":{"abstract":[],"type":"topic","role":"article","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step2SDKAuthentication","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/vigramsdk\/step2sdkauthentication","title":"SDK Authentication"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Step1GettingStarted":{"type":"topic","abstract":[],"role":"article","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step1GettingStarted","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/vigramsdk\/step1gettingstarted","title":"Import VigramSDK"},"https://developer.apple.com/documentation/combine":{"identifier":"https:\/\/developer.apple.com\/documentation\/combine","type":"link","titleInlineContent":[{"type":"text","text":"Apple Combine Documentation"}],"title":"Apple Combine Documentation","url":"https:\/\/developer.apple.com\/documentation\/combine"},"https://github.com/vigram-sw/SDK_iOS_viDoc_Distribution/tree/demo/":{"identifier":"https:\/\/github.com\/vigram-sw\/SDK_iOS_viDoc_Distribution\/tree\/demo\/","type":"link","titleInlineContent":[{"type":"text","text":"Demo repository"}],"title":"Demo repository","url":"https:\/\/github.com\/vigram-sw\/SDK_iOS_viDoc_Distribution\/tree\/demo\/"},"logo.png":{"identifier":"logo.png","alt":"Vigram logo.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.vigram.VigramSDK\/logo.png"}]},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Peripheral":{"title":"Peripheral","abstract":[{"type":"text","text":"Peripheral provides a write and receive interface to communicate with the viDoc device."}],"role":"symbol","navigatorTitle":[{"text":"Peripheral","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peripheral","kind":"identifier"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral","kind":"symbol","type":"topic","url":"\/documentation\/vigramsdk\/peripheral"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/SDKErrorsAndExceptions":{"type":"topic","abstract":[],"role":"article","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/SDKErrorsAndExceptions","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/vigramsdk\/sdkerrorsandexceptions","title":"SDK Errors and exceptions"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/GettingStarted":{"kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Getting Started with VigramSDK","abstract":[],"role":"article","type":"topic","url":"\/documentation\/vigramsdk\/gettingstarted","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/GettingStarted"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Step7LaserService":{"role":"article","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/vigramsdk\/step7laserservice","title":"Using Laser service","type":"topic","abstract":[],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step7LaserService","kind":"article"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/UsePeripheralLogger":{"kind":"article","type":"topic","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePeripheralLogger","url":"\/documentation\/vigramsdk\/useperipherallogger","role":"article","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[],"title":"Use Peripheral Logger"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/UsePeripheralConfiguration":{"type":"topic","abstract":[],"role":"article","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePeripheralConfiguration","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/vigramsdk\/useperipheralconfiguration","title":"Use Peripheral Configuration"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/PeripheralError":{"role":"symbol","url":"\/documentation\/vigramsdk\/peripheralerror","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"PeripheralError","kind":"identifier"}],"title":"PeripheralError","abstract":[{"type":"text","text":"PeripheralError combines different failure events that can be emitted on sending data to a "},{"type":"reference","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral","isActive":true},{"type":"text","text":"."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/PeripheralError","navigatorTitle":[{"text":"PeripheralError","kind":"identifier"}]},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Step5WorkWithPeripheral":{"kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"title":"Work with viDoc (Peripheral)","abstract":[],"role":"article","type":"topic","url":"\/documentation\/vigramsdk\/step5workwithperipheral","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step5WorkWithPeripheral"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Step8SinglePoint":{"type":"topic","abstract":[],"role":"article","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Step8SinglePoint","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/vigramsdk\/step8singlepoint","title":"Using Single point measurements"}}}