{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vigramsdk\/gettingstarted"]}],"hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"VigramSDK"}],"title":"Getting Started with VigramSDK","images":[{"identifier":"logo.png","type":"icon"}]},"sections":[],"kind":"article","identifier":{"url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/GettingStarted","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"","anchor":"","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use the SDK, you must first be authenticated."},{"type":"text","text":" "},{"type":"text","text":"Creates a "},{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Authentication","isActive":true,"type":"reference"},{"type":"text","text":" object to check your token."}]},{"type":"codeListing","syntax":"swift","code":["let autentication: Authentication =","    Vigram.initial(token:\"your token\")","    ","let check: SingleEventPublisher<Result<Bool, Error>> ","    = autentication.check()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This procedure must be "},{"inlineContent":[{"type":"text","text":"performed once"}],"type":"strong"},{"type":"text","text":". After that, the token will work offline."}]},{"type":"paragraph","inlineContent":[{"text":"To connect to a viDoc device, create a ","type":"text"},{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService","isActive":true,"type":"reference"},{"text":", scan for available peripherals and to connect to a specific peripheral.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let bluetoothService: BluetoothService = Vigram.bluetoothService()","","let availableDevices: AnyPublisher<[CBPeripheral], Never> = ","    bluetoothService.observeAvailableDevices()","","let device: CBPeripheral = \/\/ ...","","let didConnect: AnyPublisher<CBPeripheral, Error> = ","    bluetoothService.connect(to: device.identifier)","    ","    bluetoothService.disconnect()"]},{"type":"paragraph","inlineContent":[{"text":"After the connection has successfully been established, create a ","type":"text"},{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral","isActive":true,"type":"reference"},{"type":"text","text":" using the connected "},{"identifier":"https:\/\/developer.apple.com\/documentation\/corebluetooth\/cbperipheral","type":"reference","isActive":true},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"To make sure, that a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral"},{"type":"text","text":" works correctly, you will need to call the method of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral"},{"type":"text","text":":"}]},{"code":["func start() -> SingleEventPublisher<Void>"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"and wait for its result before sending\/receiving data from or to it.","type":"text"}]},{"inlineContent":[{"type":"text","text":"A "},{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral","type":"reference","isActive":true},{"text":" allows sending of binary messages and receiving NMEA-0183 and device messages.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let peripheral: Peripheral = ","    Vigram.peripheral(device)","","let didStart: SingleEventPublisher<Void> = ","    peripheral.start()","","let nmeaMessages: AnyPublisher<NMEAMessage, Never> = ","    peripheral.nmea","","let deviceMessages: AnyPublisher<DeviceMessage, Never> = ","    peripheral.deviceMessages","","let didSend: AnyPublisher<Void, Error> = ","    peripheral.send(Data(), chunkSize: 10)","    ","let softNotice: AnyPublisher<(Software?, Software)>? = ","    peripheral.softwareNotice()","    ","let isNeedUpdate: AnyPublisher<Bool> = ","    peripheral.isNeedSoftwareUpdate()","    ","let stateUpdate: AnyPublisher<StateUpdateSoftware?>? = ","    peripheral.softwareUpdateState()","    ","let progressUpdate: AnyPublisher<Double>? = ","    peripheral.softwareUpdateProgress()"],"syntax":"swift"},{"inlineContent":[{"text":"If you need to disconnect from the current peripheral, you need to call the ","type":"text"},{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService\/disconnect()","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To correct the location data using a viDoc device, you can create a "},{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/NtripService","isActive":true,"type":"reference"},{"text":", search for available mountpoints and create a ","type":"text"},{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/NtripTask","isActive":true,"type":"reference"},{"text":" for one specific mountpoint.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let ntripInformation = NtripConnectionInformation(","    hostname: \"hostname\", ","    port: 80, ","    username: \"user\", ","    password: \"password\"",")","","let ntripService: NtripService = ","    Vigram.ntripService()","","let mountpoints: AnyPublisher<[NtripMountPoint], Error> = ","    try ntripService.mountpoints(for: ntripInformation)","","let mountpoint: String = \/\/ ...","let message: GGAMessage = \/\/ ...","","let task: NtripTask = ","    try ntripService.task(","        for: ntripInformation, ","        atMountPoint: mountpoint, ","        message: message","    )","","let ntripState: AnyPublisher<StateNtripConnection>? = task?.ntripState"]},{"type":"paragraph","inlineContent":[{"text":"Create a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/GPSService","type":"reference"},{"text":" with a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral"},{"type":"text","text":", a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService"},{"text":" and an optional ","type":"text"},{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/NtripTask","isActive":true,"type":"reference"},{"type":"text","text":" to observe location data from the vigram peripheral. Additionally, a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/LaserService"},{"type":"text","text":" allows you to record laser distances over a given time interval."}]},{"type":"codeListing","syntax":"swift","code":["let gpsService: GPSService = ","    Vigram.gpsService(","        peripheral: peripheral, ","        bluetoothService: bluetoothService, ","        correctionTask: task","    )","","let coordinates: AnyPublisher<GPSCoordinate, Never> = ","    gpsService.coordinate","","let laserService: LaserService = ","    Vigram.laserService(peripheral: peripheral)","","let laserRecording: AnyPublisher<DeviceMessage.Measurement, Error> = ","    laserService.record(","            configuration: .init(","            shotMode: .auto, ","            position: .bottom, ","            duration: 60","        )","    )"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a "},{"type":"reference","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/SinglePointRecordingService","isActive":true},{"type":"text","text":" to record single points over a given duration with increased accuracy."}]},{"code":["let singlePointService: SinglePointRecordingService = ","    Vigram.singlePointRecordingService(gpsService: gpsService)","let points: AnyPublisher<SinglePoint, Error> = ","    singlePointService.record(","        duration: 5, ","        updateInterval: 0.01, ","        with: CoordinateCorrection.Method.none","    )"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to use pedestrian or stationary dynamic state mode viDoc with SinglePoint measurements use this init"}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Note"}]},{"type":"text","text":": This option available on 0.5.4 SDK version or up"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Init without laser","let singlePointService: SinglePointRecordingService = ","    Vigram.singlePointRecordingService(","    gpsService: GPSService, ","    peripheral: Peripheral, ","    dynamicStateType: DynamicStateType",")","\/\/ Init with laser","let singlePointService: SinglePointRecordingService = ","Vigram.singlePointRecordingService(","    gpsService: gpsService, ","    laserService: laserService, ","    peripheral: peripheral, ","    dynamicStateType: .pedestrian",")"]}]}],"references":{"logo.png":{"type":"image","identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.vigram.VigramSDK\/logo.png"}],"alt":"Vigram logo."},"https://developer.apple.com/documentation/corebluetooth/cbperipheral":{"titleInlineContent":[{"text":"CBPeripheral","type":"text"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/corebluetooth\/cbperipheral","url":"https:\/\/developer.apple.com\/documentation\/corebluetooth\/cbperipheral","title":"CBPeripheral"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/GPSService":{"role":"symbol","url":"\/documentation\/vigramsdk\/gpsservice","title":"GPSService","navigatorTitle":[{"text":"GPSService","kind":"identifier"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/GPSService","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"GPSService","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/GPSService","isActive":true},{"type":"text","text":" to observe location data, location quality characteristics and accuracy information."}],"kind":"symbol","type":"topic"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/BluetoothService":{"role":"symbol","abstract":[{"type":"text","text":"A BluetoothService is used to handle bluetooth connections."}],"kind":"symbol","url":"\/documentation\/vigramsdk\/bluetoothservice","title":"BluetoothService","navigatorTitle":[{"kind":"identifier","text":"BluetoothService"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"BluetoothService","kind":"identifier"}]},"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK","url":"\/documentation\/vigramsdk","abstract":[],"type":"topic","kind":"symbol","title":"VigramSDK"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/NtripService":{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/NtripService","abstract":[{"type":"text","text":"NtripService is used to search for NTRIP mountpoints for various NTRIP providers and create "},{"isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/NtripTask","type":"reference"},{"text":" instances to access NTRIP data.","type":"text"}],"kind":"symbol","url":"\/documentation\/vigramsdk\/ntripservice","navigatorTitle":[{"text":"NtripService","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"NtripService","kind":"identifier"}],"title":"NtripService","type":"topic","role":"symbol"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/SinglePointRecordingService":{"type":"topic","kind":"symbol","title":"SinglePointRecordingService","url":"\/documentation\/vigramsdk\/singlepointrecordingservice","role":"symbol","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/SinglePointRecordingService","abstract":[{"type":"text","text":"SinglePointRecordingService can be used to record single points over a given duration."},{"type":"text","text":" "},{"type":"text","text":"During the recording phase, the service will keep track of all the environment’s data and then merge individual measurements to one combined single point."}],"navigatorTitle":[{"text":"SinglePointRecordingService","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SinglePointRecordingService","kind":"identifier"}]},"doc://com.vigram.VigramSDK/documentation/VigramSDK/NtripTask":{"type":"topic","navigatorTitle":[{"text":"NtripTask","kind":"identifier"}],"url":"\/documentation\/vigramsdk\/ntriptask","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/NtripTask","title":"NtripTask","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"NtripTask","kind":"identifier"}],"abstract":[{"type":"text","text":"A NtripTask requests RTK data over a NTRIP connection."}]},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Authentication":{"navigatorTitle":[{"text":"Authentication","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Authentication","kind":"identifier"}],"title":"Authentication","abstract":[{"type":"text","text":"First creates a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Authentication"},{"text":" to check token and use SDK functions.","type":"text"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Authentication","type":"topic","url":"\/documentation\/vigramsdk\/authentication","kind":"symbol","role":"symbol"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/BluetoothService/disconnect()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"disconnect","kind":"identifier"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Disconnect to a current peripheral."}],"role":"symbol","required":true,"kind":"symbol","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService\/disconnect()","url":"\/documentation\/vigramsdk\/bluetoothservice\/disconnect()","title":"disconnect()"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/LaserService":{"role":"symbol","abstract":[{"text":"Use a LaserService to start laser distance recording sessions with a given configuration.","type":"text"}],"kind":"symbol","url":"\/documentation\/vigramsdk\/laserservice","title":"LaserService","navigatorTitle":[{"kind":"identifier","text":"LaserService"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/LaserService","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LaserService"}]},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Peripheral":{"abstract":[{"type":"text","text":"Peripheral provides a write and receive interface to communicate with the viDoc device."}],"role":"symbol","navigatorTitle":[{"text":"Peripheral","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral","title":"Peripheral","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Peripheral","kind":"identifier"}],"url":"\/documentation\/vigramsdk\/peripheral"}}}