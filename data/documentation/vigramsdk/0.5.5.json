{"metadata":{"title":"0.5.5","modules":[{"name":"VigramSDK"}],"role":"article","images":[{"identifier":"logo.png","type":"icon"}],"roleHeading":"Article"},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/0.5.5","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/vigramsdk\/0.5.5"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"article","hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"What-is-the-new-on-this-release","type":"heading","text":"What is the new on this release"},{"level":4,"anchor":"Peripheral","type":"heading","text":"Peripheral"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added Dynamic state"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"If needed to set the dynamic state of viDoc perform the method","type":"text"}]},{"code":["peripheral.setDynamicState(type: type)","    .sink(receiveCompletion: { completion in ","        \/\/ do something with completion state","    }) { messageIsAcknowledgeValue in ","        \/\/ do something with receive value","    }","    .store(in: &subscription)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If needed to get the dynamic state of viDoc perform the method"}]},{"type":"codeListing","syntax":"swift","code":["peripheral.getCurrentDynamicState()","    .sink(receiveCompletion: { completion in ","        \/\/ do something with completion state","    }) { value in","        switch state.current {","        case .pedestrian:","            \/\/ do something","        case .stationary:","            \/\/ do something","        @unknown default:","            break","        }","    }","    .store(in: &subscription)"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Added the ability to update the viDoc software."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"If needed to check if a software update is needed use this variables","type":"text"}]},{"code":["var isNeedUpdateSoftware: StatePublisher<Bool>","var noticeSoftware: StatePublisher <(","current: DeviceMessage.Version.Software?, ","actual: DeviceMessage.Version.Software?",")>"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"If you need to update software viDoc, perform this method","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["","peripheral.setUpdateSoftwareToNextStartup(","    Bool, ","    version: DeviceMessage.Version.Software",")"]},{"inlineContent":[{"text":"After reload viDoc is begining update software process.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the following variables to control the upgrade process"}]},{"syntax":"swift","code":["var errorWrite: Bool ","var stateSoftwareUpdate: StatePublisher<StateUpdateSoftware> ","var progressSoftwareUpdate: StatePublisher<Double> "],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Changed enum value from"}],"type":"paragraph"}]}]},{"syntax":"swift","code":["StateUpdateSoftware.startUpdate"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"on"}]},{"syntax":"swift","type":"codeListing","code":["StateUpdateSoftware.startUpdate(DeviceMessage.Version.Software)"]},{"inlineContent":[{"type":"text","text":"where DeviceMessage.Version.Software is the version of the software being installed"}],"type":"paragraph"},{"text":"SinglePoint","type":"heading","level":4,"anchor":"SinglePoint"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Added the ability to use pedestrian state of viDoc for SinglePoint measurent","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"If you need to use pedestrian or stationary dynamic state mode viDoc with SinglePoint measurements use this init","type":"text"}]},{"syntax":"swift","code":["\/\/ Init without laser","let singlePointService: SinglePointRecordingService = ","    Vigram.singlePointRecordingService(","        gpsService: GPSService, ","        peripheral: Peripheral, ","        dynamicStateType: DynamicStateType","    )","","\/\/ Init with laser","let singlePointService: SinglePointRecordingService = ","    Vigram.singlePointRecordingService(","        gpsService: GPSService, ","        laserService: LaserService, ","        peripheral: Peripheral, ","        dynamicStateType: DynamicStateType","    )"],"type":"codeListing"},{"level":4,"type":"heading","text":"SoftwareService","anchor":"SoftwareService"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If needed to get information about software for viDoc create a "},{"type":"strong","inlineContent":[{"type":"text","text":"SoftwareService"}]},{"text":" object","type":"text"}]},{"type":"codeListing","code":["let softwareService: SoftwareService =","    Vigram.softwareService()","    ","let actualVersionSoftware: ","    SingleEventPublisher<DeviceMessage.Version.Software> = ","        softwareService.getActualVersionSoftware()","","let allVersionSoftware: ","    SingleEventPublisher<[DeviceMessage.Version.Software]> = ","        softwareService.getAllAvailableSoftware()"],"syntax":"swift"}]}],"references":{"logo.png":{"alt":"Vigram logo.","type":"image","variants":[{"url":"\/images\/com.vigram.VigramSDK\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK","abstract":[],"title":"VigramSDK","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/vigramsdk","kind":"symbol"}}}