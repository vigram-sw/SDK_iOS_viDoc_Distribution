{"hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"]]},"kind":"article","metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"roleHeading":"Article","modules":[{"name":"VigramSDK"}],"role":"article","title":"0.5.3"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vigramsdk\/0.5.3"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"What is the new on this release","anchor":"What-is-the-new-on-this-release","level":2},{"anchor":"Authentication","level":4,"text":"Authentication","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Added function check is valid token","type":"text"},{"text":" ","type":"text"},{"text":"Usage:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let tokenIsValid = Vigram.tokenIsValid()","","switch tokenIsValid {","case .success(let result):","    if result == true {","        \/\/\/ successful result","    } else {","       \/\/\/ not successful result","    }","case .failure(let error):","    \/\/\/ Error Handling AuthenticationError type","}"]},{"text":"Bluetooth","level":4,"type":"heading","anchor":"Bluetooth"},{"type":"paragraph","inlineContent":[{"text":"The manager now automatically updates the list of available viDoc devices.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If the device becomes unavailable during the search, the manager will automatically update the actual list of available devices."}]},{"anchor":"Peripheral","text":"Peripheral","type":"heading","level":4},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Added iPhone 14ProMax Offsets","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fix issue with request battery and software version"}]}]},{"content":[{"inlineContent":[{"text":"Added Peripheral configuration","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Note: detailed information is here: ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePeripheralConfiguration","isActive":true}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Added PPK measurements"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Note: detailed information is here: ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePPKMeasurements","isActive":true}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Added GNSS constellation commands","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"If needed to get the status for the selected satellite perform the method","type":"text"}]},{"code":["peripheral.getCurrentStatusGNSS(satellite: NavigationSystemType) ->","SingleEventPublisher<SatelliteMessage.StatusSattelite>"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If needed to enable\/disable any satellite type perform the method"}]},{"code":["peripheral.changeStatusGNSS(","    satellite: NavigationSystemType, ","    activate: Bool",") -> SingleEventPublisher<SatelliteMessage.Acknowledge>"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Note: GPS type is not disable","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If needed to activate all constellations perform the method","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["peripheral.activateAllConstellationGNSS() -> ","SingleEventPublisher<SatelliteMessage.Acknowledge>"]},{"type":"paragraph","inlineContent":[{"text":"Note: All are active by default","type":"text"}]},{"inlineContent":[{"text":"If needed to set default parameters for all constellations perform the method","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["peripheral.setDefaultStateMessages(activate: Bool) ->","SingleEventPublisher<SatelliteMessage.Acknowledge>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: All type satellite is activated, NAVDOP and NAVPVT messages is activated, the rate of changing messages is 7Hz"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Added command to set minimum elevation for satellites to be used in navigation."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"If needed to get the current elevation value used in navigation perform the method","type":"text"}],"type":"paragraph"},{"code":["peripheral.getCurrentMinimumElevation() -> ","SingleEventPublisher<SatelliteMessage.Elevation>"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If needed to set the current elevation value used in navigation perform the method"}]},{"type":"codeListing","syntax":"swift","code":["peripheral.setMinimumElevation(angle: ElevationValue) ->","SingleEventPublisher<SatelliteMessage.Acknowledge> "]},{"type":"paragraph","inlineContent":[{"text":"Note: 10 degrees by default","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add enable\/disable commands for NAV-DOP messages (VDOP, HDOP, PDOP messages)"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"If needed to enable\/disable NAV-DOP messages perform the method","type":"text"}]},{"type":"codeListing","code":["peripheral.changeStatusNAVDOP(activate: Bool) -> ","SingleEventPublisher<SatelliteMessage.Acknowledge>"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Add enable\/disable commands for NAV-PVT messages (Count of satellites and Velocities values)"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If needed to enable\/disable NAV-PVT messages perform the method"}]},{"type":"codeListing","syntax":"swift","code":["peripheral.changeStatusNAVPVT(activate: Bool) -> ","SingleEventPublisher<SatelliteMessage.Acknowledge>"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Add changing rate of navigation message commands"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"If needed to change rate of navigation messages perform the method","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["peripheral.setChangingRateOfMessages(_ rate: RateValue) -> ","SingleEventPublisher<SatelliteMessage.Acknowledge>"]},{"inlineContent":[{"text":"Note: 7Hz by default","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Changed initial value of variable","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"codeListing","syntax":"swift","code":["var peripfiral.state = .disconnected "]},{"type":"paragraph","inlineContent":[{"type":"text","text":"to"}]},{"type":"codeListing","syntax":"swift","code":["var peripfiral.state = .connected"]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added offsets for older viDocs"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added PPK measuremens state"}]}]}],"type":"unorderedList"},{"code":["var ppkMeasurementsState: StatePublisher<Bool>"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let cancellable = peripheral.ppkMeasurementsState.sink(","    receiveValue: { [unowned self] value in","        \/\/ if value == true -> PPK measurements in active","        \/\/ if value == false -> PPK measurements in not active","    })"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fix issue with laser measurements"}]}]},{"content":[{"inlineContent":[{"text":"Added offsets for older viDocs","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added StatePeripheralConfiguration publisher","type":"text"}],"type":"paragraph"}]}]},{"code":["var configurationState: StatePublisher<StatePeripheralConfiguration>"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Example:","type":"text"}]},{"syntax":"swift","code":["let cancellable = peripheral.configurationState.sink(","    receiveValue: { [unowned self] state in","        switch(state) {","        case .inProgress:","            \/\/ configuration in progress","        case .done:","            \/\/ configuration is done","        case .failed(let error):","           \/\/ failed configuration","        }","    })"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Added default value of changing of rate. This parameter is used to change the refresh rate of viDoc data.","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"If needed to change default rate value use this value"}],"type":"paragraph"},{"code":["Configuration.defaultRate = .hertz7"],"type":"codeListing","syntax":"swift"},{"items":[{"content":[{"inlineContent":[{"text":"Some fix","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Note:","type":"text"}]},{"inlineContent":[{"text":"In this update, when PPK measurements is enable, the messages: GGA, NAV-DOP and NAV-PVT will be disabled, and the rate of changing messsages will set to 1 Hz.","type":"text"},{"type":"text","text":" "},{"text":"After the PPK measurements is disabled, the GGA, NAV-DOP and NAV-PVT messages will be enabled and the rate of changing messsages will set to the default value.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We are working on issue not disabling the above messages during PPK measurements."}]},{"level":4,"text":"NTRIP","anchor":"NTRIP","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fix "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/StateNtripConnection"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"There is no error message after normal disconnecting","type":"text"}]}]}],"identifier":{"url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/0.5.3","interfaceLanguage":"swift"},"sections":[],"references":{"doc://com.vigram.VigramSDK/documentation/VigramSDK/StateNtripConnection":{"url":"\/documentation\/vigramsdk\/statentripconnection","title":"StateNtripConnection","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"StateNtripConnection","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/StateNtripConnection","role":"symbol","abstract":[{"text":"The type of Ntrip connection state log, including connection has been preparing, ready and error in case failure connection.","type":"text"}],"navigatorTitle":[{"text":"StateNtripConnection","kind":"identifier"}],"kind":"symbol"},"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK","abstract":[],"role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/vigramsdk","title":"VigramSDK"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/UsePPKMeasurements":{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePPKMeasurements","images":[{"identifier":"logo.png","type":"icon"}],"title":"Use UBX PPK Measurements","type":"topic","role":"article","kind":"article","abstract":[],"url":"\/documentation\/vigramsdk\/useppkmeasurements"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/UsePeripheralConfiguration":{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePeripheralConfiguration","images":[{"type":"icon","identifier":"logo.png"}],"title":"Use Peripheral Configuration","type":"topic","role":"article","kind":"article","abstract":[],"url":"\/documentation\/vigramsdk\/useperipheralconfiguration"},"logo.png":{"identifier":"logo.png","alt":"Vigram logo.","variants":[{"url":"\/images\/com.vigram.VigramSDK\/logo.png","traits":["1x","light"]}],"type":"image"}}}