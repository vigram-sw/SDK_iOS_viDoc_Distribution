{"metadata":{"platforms":[{"name":"iOS","beta":false,"deprecated":false,"introducedAt":"15.0","unavailable":false},{"beta":false,"name":"iPadOS","deprecated":false,"introducedAt":"15.0","unavailable":false},{"deprecated":false,"unavailable":false,"introducedAt":"15.0","name":"Mac Catalyst","beta":false},{"name":"macOS","introducedAt":"12.0","deprecated":false,"unavailable":false,"beta":false},{"unavailable":false,"beta":false,"introducedAt":"15.0","name":"tvOS","deprecated":false},{"introducedAt":"8.0","unavailable":false,"beta":false,"deprecated":false,"name":"watchOS"}],"role":"symbol","extendedModule":"VigramSDK","roleHeading":"Instance Method","externalID":"s:9VigramSDK19DeviceMotionServicePAAE9calibrate14updateInterval6statusySd_ySfctYaKF","title":"calibrate(updateInterval:status:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"calibrate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"updateInterval","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":", ","kind":"text"},{"text":"status","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Float","preciseIdentifier":"s:Sf","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"symbolKind":"method","modules":[{"name":"VigramSDK"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK","doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/DeviceMotionService"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vigramsdk\/devicemotionservice\/calibrate(updateinterval:status:)-u7ag"]}],"identifier":{"url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/DeviceMotionService\/calibrate(updateInterval:status:)-u7ag","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Calibrate device motion by rotating the device in every octant.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"calibrate"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"updateInterval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval","text":"TimeInterval"},{"text":" = 0.01, ","kind":"text"},{"text":"status","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Float","preciseIdentifier":"s:Sf"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"updateInterval","content":[{"inlineContent":[{"type":"text","text":"The update interval of the device motion data during calibration."}],"type":"paragraph"}]},{"name":"status","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"text","text":" "},{"type":"text","text":"A closure that is called whenever calibration progress has changed."},{"text":" ","type":"text"},{"text":"Since this function is checking whether the phone was oriented in every octant,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the closure is called with multiples of 1\/8 in the range between 0 and 1 (both inclusive)."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Expecting the user to do this calibration step before recording device motion data can increase accuracy."}]}],"kind":"content"}],"references":{"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"url":"\/documentation\/vigramsdk","kind":"symbol","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK","abstract":[],"title":"VigramSDK","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","role":"collection"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/DeviceMotionService":{"navigatorTitle":[{"kind":"identifier","text":"DeviceMotionService"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/DeviceMotionService","type":"topic","url":"\/documentation\/vigramsdk\/devicemotionservice","title":"DeviceMotionService","abstract":[{"type":"text","text":"A DeviceMotionService can be used to keep track of the orientation and gravity information of the device."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeviceMotionService"}]},"logo.png":{"type":"image","variants":[{"url":"\/images\/com.vigram.VigramSDK\/logo.png","traits":["1x","light"]}],"alt":"Vigram logo.","identifier":"logo.png"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/DeviceMotionService/calibrate(updateInterval:status:)-u7ag":{"abstract":[{"type":"text","text":"Calibrate device motion by rotating the device in every octant."}],"type":"topic","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/DeviceMotionService\/calibrate(updateInterval:status:)-u7ag","url":"\/documentation\/vigramsdk\/devicemotionservice\/calibrate(updateinterval:status:)-u7ag","kind":"symbol","role":"symbol","title":"calibrate(updateInterval:status:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"calibrate"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"updateInterval"},{"kind":"text","text":": "},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"text":"status","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sf","text":"Float"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]}}}