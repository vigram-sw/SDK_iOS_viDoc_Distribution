{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UseCombineAndPublishers"},"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Combine framework provides a declarative Swift API for processing values over time. These values can represent many kinds of asynchronous events. Combine declares publishers to expose values that can change over time, and subscribers to receive those values from the publishers."},{"type":"text","text":" "},{"type":"text","text":"The Publisher protocol declares a type that can deliver a sequence of values over time. Publishers have operators to act on the values received from upstream publishers and republish them."},{"type":"text","text":" "},{"type":"text","text":"At the end of a chain of publishers, a Subscriber acts on elements as it receives them. Publishers only emit values when explicitly requested to do so by subscribers. This puts your subscriber code in control of how fast it receives events from the publishers it’s connected to."}]},{"type":"paragraph","inlineContent":[{"text":"More detailed information about Combine can be found in ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/combine"}]},{"type":"heading","level":2,"text":"Custom typealias used in SDK","anchor":"Custom-typealias-used-in-SDK"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A Publisher that never emits a failure event."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"This typealias is mostly used in scenarios, where a publisher represents a certain state and will most likely never complete.","type":"text"}]},{"code":["public typealias StatePublisher<Element> = AnyPublisher<Element, Never>"],"type":"codeListing","syntax":null},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A Publisher that may emit any failure event."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This typealias is used in situations, where a publisher represents a certain operation that may fail and completes right after emitting a single output value."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Depending on the situation, it may also emit multiple or no output values before completing."}]},{"code":["public typealias SingleEventPublisher<Element> = ","    AnyPublisher<Element, Error>"],"type":"codeListing","syntax":null},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A Publisher that may emit any failure event.","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This typealias is used in situations, where a publisher represents a certain operation that may fail and may emit multiple output values before completing."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Depending on the situation, it may also emit multiple or no output values before completing."}]},{"code":["public typealias EventsPublisher<Element> = AnyPublisher<Element, Error>"],"type":"codeListing","syntax":null},{"type":"heading","level":2,"text":"Examples of use","anchor":"Examples-of-use"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"StatePublisher","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"identifier":"fig10.png","type":"image"}]},{"type":"paragraph","inlineContent":[{"text":"In this example we subscribe to the current viDoc’s (Peripheral) NMEA message publisher","type":"text"}]},{"code":["peripheral.nmea.sink { message in","    \/\/ do something with NMEA Message","}.store(in: &subscriptions)"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this case we save the subscriptions in Set"}]},{"code":["var subscriptions = Set<AnyCancellable>()"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Note:","type":"text"}]},{"text":" It is important to remember that it is necessary to remove subscriptions from the ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Set"}]},{"text":" that we do not need, otherwise it may lead to a memory leak.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If there is no need to subscribe to multiple publishers, but only one subscription, you can use a variable:","type":"text"}]},{"code":["var subscription: AnyCancellable?","","subscription = peripheral.nmea.sink { message in","    \/\/ do something with NMEA Message","}","","subscription = nil \/\/ If you no longer need a subscription"],"type":"codeListing","syntax":null},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"SingleEventPublisher","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"fig11.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example we make request to receive the battery value of current  viDoc’s (Peripheral)"}]},{"code":["peripheral.requestBattery().sink(receiveCompletion: { completion in","    switch completion {","    case .finished:","        break \/\/ Normal completion","    case .failure(let error):","        \/\/ do something with error receive value","    }","}) { value in ","    \/\/ do something with value","}.store(in: &subscriptions)"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"This example has a completion block where you can track normal completion or an error.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normal completion is when the value is successfully received."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An error is an inability to obtain a value. In this case, for example, you might get the error "},{"inlineContent":[{"type":"text","text":"device is busy"}],"type":"strong"},{"type":"text","text":" if you request the battery value during viDoc configuration"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using viDoc requests is discussed in more detail in the Connecting to viDoc section."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vigramsdk\/usecombineandpublishers"]}],"hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"]]},"kind":"article","schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"role":"article","images":[{"type":"icon","identifier":"logo.png"}],"title":"Using Combine and Publishers","roleHeading":"Article","modules":[{"name":"VigramSDK"}]},"references":{"https://developer.apple.com/documentation/combine":{"titleInlineContent":[{"text":"this section.","type":"text"}],"type":"link","title":"this section.","identifier":"https:\/\/developer.apple.com\/documentation\/combine","url":"https:\/\/developer.apple.com\/documentation\/combine"},"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/vigramsdk","title":"VigramSDK","abstract":[],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"},"fig11.png":{"alt":"Fig.11","type":"image","identifier":"fig11.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.vigram.VigramSDK\/fig11.png"}]},"logo.png":{"alt":"Vigram logo.","type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.vigram.VigramSDK\/logo.png","traits":["1x","light"]}]},"fig10.png":{"alt":"Fig.10","type":"image","identifier":"fig10.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.vigram.VigramSDK\/fig10.png"}]}}}