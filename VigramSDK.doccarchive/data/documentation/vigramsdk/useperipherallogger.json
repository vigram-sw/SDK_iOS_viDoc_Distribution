{"identifier":{"url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePeripheralLogger","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"text":"","level":2,"type":"heading","anchor":""},{"type":"paragraph","inlineContent":[{"text":"If you need use ","type":"text"},{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/PeripheralLogger","isActive":true,"type":"reference"},{"type":"text","text":" first create URL path for logger file."},{"text":" ","type":"text"},{"text":"Example:","type":"text"}]},{"code":["var path: URL? \/\/ Path for logger file.","\/\/ For example let file = \"log.txt\"","let file = \"Filename\" + \".\" + \"file extension\" ","","let fileManager = FileManager.default","let directory = fileManager.urls(for: .documentDirectory, ","                                 in: .userDomainMask)","","if directory.count != 0  {","    path = directory[0].appendingPathComponent(\"Name directory\")","    if let path = path?.path {","        if !fileManager.fileExists(atPath: path) {","            do {","                try fileManager.createDirectory(atPath: path, ","                        withIntermediateDirectories: true, ","                        attributes: nil)","            } catch {","                print(\"Error: \\(error.localizedDescription)\")","            }","        }","    }","    path = path?.appendingPathComponent(file)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"After then, need to pass url path of logger file to peripheral init:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["do {","    try self.peripheral = Vigram.peripheral(peripheral, log: path)","} catch {","    print(\"Error: \\(error.localizedDescription)\")","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: If you don’t pass url path to init, logger will not works"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The logger registered all activities and write its in file."}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"]]},"metadata":{"title":"Use Peripheral Logger","modules":[{"name":"VigramSDK"}],"roleHeading":"Article","images":[{"type":"icon","identifier":"logo.png"}],"role":"article"},"sections":[],"variants":[{"paths":["\/documentation\/vigramsdk\/useperipherallogger"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","references":{"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.vigram.VigramSDK\/logo.png"}],"type":"image","identifier":"logo.png","alt":"Vigram logo."},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Peripheral":{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral","abstract":[{"type":"text","text":"Peripheral provides a write and receive interface to communicate with the viDoc device."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Peripheral","kind":"identifier"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"Peripheral","kind":"identifier"}],"url":"\/documentation\/vigramsdk\/peripheral","title":"Peripheral","kind":"symbol"},"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"kind":"symbol","abstract":[],"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"VigramSDK","url":"\/documentation\/vigramsdk","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK","role":"collection"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/PeripheralLogger":{"kind":"symbol","title":"PeripheralLogger","type":"topic","navigatorTitle":[{"text":"PeripheralLogger","kind":"identifier"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/PeripheralLogger","url":"\/documentation\/vigramsdk\/peripherallogger","abstract":[{"text":"The PeripheralLogger can be used to log a ","type":"text"},{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral","isActive":true,"type":"reference"},{"text":"’s activity.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PeripheralLogger"}],"role":"symbol"}}}