{"metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"Use Peripheral Logger","modules":[{"name":"VigramSDK"}],"roleHeading":"Article","role":"article"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"","type":"heading","anchor":""},{"inlineContent":[{"text":"If you need use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/PeripheralLogger"},{"type":"text","text":" first create URL path for logger file."},{"type":"text","text":" "},{"type":"text","text":"Example:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["var path: URL? \/\/ Path for logger file.","\/\/ For example let file = \"log.txt\"","let file = \"Filename\" + \".\" + \"file extension\" ","","let fileManager = FileManager.default","let directory = fileManager.urls(for: .documentDirectory, ","                                 in: .userDomainMask)","","if directory.count != 0  {","    path = directory[0].appendingPathComponent(\"Name directory\")","    if let path = path?.path {","        if !fileManager.fileExists(atPath: path) {","            do {","                try fileManager.createDirectory(atPath: path, ","                        withIntermediateDirectories: true, ","                        attributes: nil)","            } catch {","                print(\"Error: \\(error.localizedDescription)\")","            }","        }","    }","    path = path?.appendingPathComponent(file)","}"]},{"inlineContent":[{"type":"text","text":"After then, need to pass url path of logger file to peripheral init:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["do {","    try self.peripheral = Vigram.peripheral(peripheral, log: path)","} catch {","    print(\"Error: \\(error.localizedDescription)\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: If you don’t pass url path to init, logger will not works"}]},{"type":"paragraph","inlineContent":[{"text":"The logger registered all activities and write its in file.","type":"text"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePeripheralLogger"},"sections":[],"kind":"article","hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vigramsdk\/useperipherallogger"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"role":"collection","title":"VigramSDK","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[],"url":"\/documentation\/vigramsdk","type":"topic","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/PeripheralLogger":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PeripheralLogger","kind":"identifier"}],"title":"PeripheralLogger","kind":"symbol","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/PeripheralLogger","type":"topic","url":"\/documentation\/vigramsdk\/peripherallogger","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PeripheralLogger"}],"abstract":[{"text":"The PeripheralLogger can be used to log a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral","type":"reference"},{"type":"text","text":"’s activity."}]},"logo.png":{"alt":"Vigram logo.","variants":[{"traits":["1x","light"],"url":"\/images\/com.vigram.VigramSDK\/logo.png"}],"type":"image","identifier":"logo.png"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Peripheral":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Peripheral"}],"title":"Peripheral","type":"topic","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral","url":"\/documentation\/vigramsdk\/peripheral","kind":"symbol","abstract":[{"type":"text","text":"Peripheral provides a write and receive interface to communicate with the viDoc device."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peripheral","kind":"identifier"}]}}}