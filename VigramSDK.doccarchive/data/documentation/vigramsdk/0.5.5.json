{"kind":"article","primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"What is the new on this release","anchor":"What-is-the-new-on-this-release","level":2},{"text":"Peripheral","type":"heading","level":4,"anchor":"Peripheral"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Added Dynamic state","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"If needed to set the dynamic state of viDoc perform the method","type":"text"}],"type":"paragraph"},{"code":["peripheral.setDynamicState(type: type)","    .sink(receiveCompletion: { completion in ","        \/\/ do something with completion state","    }) { messageIsAcknowledgeValue in ","        \/\/ do something with receive value","    }","    .store(in: &subscription)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"If needed to get the dynamic state of viDoc perform the method","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["peripheral.getCurrentDynamicState()","    .sink(receiveCompletion: { completion in ","        \/\/ do something with completion state","    }) { value in","        switch state.current {","        case .pedestrian:","            \/\/ do something","        case .stationary:","            \/\/ do something","        @unknown default:","            break","        }","    }","    .store(in: &subscription)"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the ability to update the viDoc software."}]}]}]},{"inlineContent":[{"text":"If needed to check if a software update is needed use this variables","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["var isNeedUpdateSoftware: StatePublisher<Bool>","var noticeSoftware: StatePublisher <(","current: DeviceMessage.Version.Software?, ","actual: DeviceMessage.Version.Software?",")>"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If you need to update software viDoc, perform this method","type":"text"}]},{"syntax":"swift","code":["","peripheral.setUpdateSoftwareToNextStartup(","    Bool, ","    version: DeviceMessage.Version.Software",")"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"After reload viDoc is begining update software process."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Use the following variables to control the upgrade process","type":"text"}]},{"code":["var errorWrite: Bool ","var stateSoftwareUpdate: StatePublisher<StateUpdateSoftware> ","var progressSoftwareUpdate: StatePublisher<Double> "],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Changed enum value from"}],"type":"paragraph"}]}]},{"syntax":"swift","type":"codeListing","code":["StateUpdateSoftware.startUpdate"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"on"}]},{"syntax":"swift","type":"codeListing","code":["StateUpdateSoftware.startUpdate(DeviceMessage.Version.Software)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"where DeviceMessage.Version.Software is the version of the software being installed"}]},{"level":4,"text":"SinglePoint","anchor":"SinglePoint","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"Added the ability to use pedestrian state of viDoc for SinglePoint measurent","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to use pedestrian or stationary dynamic state mode viDoc with SinglePoint measurements use this init"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Init without laser","let singlePointService: SinglePointRecordingService = ","    Vigram.singlePointRecordingService(","        gpsService: GPSService, ","        peripheral: Peripheral, ","        dynamicStateType: DynamicStateType","    )","","\/\/ Init with laser","let singlePointService: SinglePointRecordingService = ","    Vigram.singlePointRecordingService(","        gpsService: GPSService, ","        laserService: LaserService, ","        peripheral: Peripheral, ","        dynamicStateType: DynamicStateType","    )"]},{"text":"SoftwareService","anchor":"SoftwareService","type":"heading","level":4},{"inlineContent":[{"type":"text","text":"If needed to get information about software for viDoc create a "},{"inlineContent":[{"text":"SoftwareService","type":"text"}],"type":"strong"},{"type":"text","text":" object"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let softwareService: SoftwareService =","    Vigram.softwareService()","    ","let actualVersionSoftware: ","    SingleEventPublisher<DeviceMessage.Version.Software> = ","        softwareService.getActualVersionSoftware()","","let allVersionSoftware: ","    SingleEventPublisher<[DeviceMessage.Version.Software]> = ","        softwareService.getAllAvailableSoftware()"]}]}],"variants":[{"paths":["\/documentation\/vigramsdk\/0.5.5"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"article","images":[{"type":"icon","identifier":"logo.png"}],"roleHeading":"Article","modules":[{"name":"VigramSDK"}],"title":"0.5.5"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/0.5.5"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"]]},"references":{"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK","url":"\/documentation\/vigramsdk","abstract":[],"type":"topic","kind":"symbol","title":"VigramSDK"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.vigram.VigramSDK\/logo.png"}],"identifier":"logo.png","type":"image","alt":"Vigram logo."}}}