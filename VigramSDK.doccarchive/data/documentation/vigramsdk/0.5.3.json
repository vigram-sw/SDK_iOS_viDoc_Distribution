{"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"anchor":"What-is-the-new-on-this-release","type":"heading","level":2,"text":"What is the new on this release"},{"anchor":"Authentication","type":"heading","level":4,"text":"Authentication"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Added function check is valid token"},{"type":"text","text":" "},{"type":"text","text":"Usage:"}]},{"type":"codeListing","syntax":"swift","code":["let tokenIsValid = Vigram.tokenIsValid()","","switch tokenIsValid {","case .success(let result):","    if result == true {","        \/\/\/ successful result","    } else {","       \/\/\/ not successful result","    }","case .failure(let error):","    \/\/\/ Error Handling AuthenticationError type","}"]},{"anchor":"Bluetooth","type":"heading","level":4,"text":"Bluetooth"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The manager now automatically updates the list of available viDoc devices."},{"type":"text","text":" "},{"type":"text","text":"If the device becomes unavailable during the search, the manager will automatically update the actual list of available devices."}]},{"anchor":"Peripheral","type":"heading","level":4,"text":"Peripheral"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Added iPhone 14ProMax Offsets","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Fix issue with request battery and software version"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added Peripheral configuration"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: detailed information is here: "},{"type":"reference","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePeripheralConfiguration","isActive":true}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added PPK measurements"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Note: detailed information is here: ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePPKMeasurements"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Added GNSS constellation commands","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If needed to get the status for the selected satellite perform the method"}]},{"type":"codeListing","syntax":"swift","code":["peripheral.getCurrentStatusGNSS(satellite: NavigationSystemType) ->","SingleEventPublisher<SatelliteMessage.StatusSattelite>"]},{"type":"paragraph","inlineContent":[{"text":"If needed to enable\/disable any satellite type perform the method","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["peripheral.changeStatusGNSS(","    satellite: NavigationSystemType, ","    activate: Bool",") -> SingleEventPublisher<SatelliteMessage.Acknowledge>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: GPS type is not disable"}]},{"type":"paragraph","inlineContent":[{"text":"If needed to activate all constellations perform the method","type":"text"}]},{"code":["peripheral.activateAllConstellationGNSS() -> ","SingleEventPublisher<SatelliteMessage.Acknowledge>"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Note: All are active by default","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If needed to set default parameters for all constellations perform the method"}]},{"syntax":"swift","code":["peripheral.setDefaultStateMessages(activate: Bool) ->","SingleEventPublisher<SatelliteMessage.Acknowledge>"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: All type satellite is activated, NAVDOP and NAVPVT messages is activated, the rate of changing messages is 7Hz"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Added command to set minimum elevation for satellites to be used in navigation.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"If needed to get the current elevation value used in navigation perform the method","type":"text"}],"type":"paragraph"},{"code":["peripheral.getCurrentMinimumElevation() -> ","SingleEventPublisher<SatelliteMessage.Elevation>"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"If needed to set the current elevation value used in navigation perform the method","type":"text"}]},{"code":["peripheral.setMinimumElevation(angle: ElevationValue) ->","SingleEventPublisher<SatelliteMessage.Acknowledge> "],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Note: 10 degrees by default"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add enable\/disable commands for NAV-DOP messages (VDOP, HDOP, PDOP messages)"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"If needed to enable\/disable NAV-DOP messages perform the method","type":"text"}],"type":"paragraph"},{"code":["peripheral.changeStatusNAVDOP(activate: Bool) -> ","SingleEventPublisher<SatelliteMessage.Acknowledge>"],"syntax":"swift","type":"codeListing"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Add enable\/disable commands for NAV-PVT messages (Count of satellites and Velocities values)","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"If needed to enable\/disable NAV-PVT messages perform the method"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["peripheral.changeStatusNAVPVT(activate: Bool) -> ","SingleEventPublisher<SatelliteMessage.Acknowledge>"]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Add changing rate of navigation message commands","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"If needed to change rate of navigation messages perform the method","type":"text"}]},{"type":"codeListing","code":["peripheral.setChangingRateOfMessages(_ rate: RateValue) -> ","SingleEventPublisher<SatelliteMessage.Acknowledge>"],"syntax":"swift"},{"inlineContent":[{"text":"Note: 7Hz by default","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Changed initial value of variable","type":"text"},{"text":" ","type":"text"},{"text":"from","type":"text"}]}]}],"type":"unorderedList"},{"type":"codeListing","syntax":"swift","code":["var peripfiral.state = .disconnected "]},{"type":"paragraph","inlineContent":[{"type":"text","text":"to"}]},{"type":"codeListing","syntax":"swift","code":["var peripfiral.state = .connected"]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Added offsets for older viDocs"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added PPK measuremens state","type":"text"}]}]}],"type":"unorderedList"},{"type":"codeListing","code":["var ppkMeasurementsState: StatePublisher<Bool>"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"codeListing","code":["let cancellable = peripheral.ppkMeasurementsState.sink(","    receiveValue: { [unowned self] value in","        \/\/ if value == true -> PPK measurements in active","        \/\/ if value == false -> PPK measurements in not active","    })"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fix issue with laser measurements"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added offsets for older viDocs"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added StatePeripheralConfiguration publisher"}]}]}]},{"type":"codeListing","code":["var configurationState: StatePublisher<StatePeripheralConfiguration>"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Example:","type":"text"}]},{"type":"codeListing","code":["let cancellable = peripheral.configurationState.sink(","    receiveValue: { [unowned self] state in","        switch(state) {","        case .inProgress:","            \/\/ configuration in progress","        case .done:","            \/\/ configuration is done","        case .failed(let error):","           \/\/ failed configuration","        }","    })"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Added default value of changing of rate. This parameter is used to change the refresh rate of viDoc data.","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"If needed to change default rate value use this value"}],"type":"paragraph"},{"code":["Configuration.defaultRate = .hertz7"],"syntax":"swift","type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Some fix"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Note:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In this update, when PPK measurements is enable, the messages: GGA, NAV-DOP and NAV-PVT will be disabled, and the rate of changing messsages will set to 1 Hz."},{"type":"text","text":" "},{"type":"text","text":"After the PPK measurements is disabled, the GGA, NAV-DOP and NAV-PVT messages will be enabled and the rate of changing messsages will set to the default value."}],"type":"paragraph"},{"inlineContent":[{"text":"We are working on issue not disabling the above messages during PPK measurements.","type":"text"}],"type":"paragraph"},{"level":4,"text":"NTRIP","type":"heading","anchor":"NTRIP"},{"items":[{"content":[{"inlineContent":[{"text":"Fix ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/StateNtripConnection","type":"reference"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is no error message after normal disconnecting"}]}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vigramsdk\/0.5.3"]}],"identifier":{"url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/0.5.3","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"]]},"metadata":{"title":"0.5.3","role":"article","images":[{"identifier":"logo.png","type":"icon"}],"modules":[{"name":"VigramSDK"}],"roleHeading":"Article"},"references":{"doc://com.vigram.VigramSDK/documentation/VigramSDK/UsePPKMeasurements":{"kind":"article","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePPKMeasurements","title":"Use UBX PPK Measurements","type":"topic","url":"\/documentation\/vigramsdk\/useppkmeasurements","role":"article","abstract":[],"images":[{"identifier":"logo.png","type":"icon"}]},"logo.png":{"type":"image","alt":"Vigram logo.","variants":[{"traits":["1x","light"],"url":"\/images\/com.vigram.VigramSDK\/logo.png"}],"identifier":"logo.png"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/UsePeripheralConfiguration":{"title":"Use Peripheral Configuration","role":"article","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[],"url":"\/documentation\/vigramsdk\/useperipheralconfiguration","type":"topic","kind":"article","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePeripheralConfiguration"},"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK","title":"VigramSDK","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","url":"\/documentation\/vigramsdk","abstract":[],"role":"collection"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/StateNtripConnection":{"abstract":[{"type":"text","text":"The type of Ntrip connection state log, including connection has been preparing, ready and error in case failure connection."}],"navigatorTitle":[{"text":"StateNtripConnection","kind":"identifier"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateNtripConnection","kind":"identifier"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/StateNtripConnection","url":"\/documentation\/vigramsdk\/statentripconnection","title":"StateNtripConnection","type":"topic","kind":"symbol"}}}