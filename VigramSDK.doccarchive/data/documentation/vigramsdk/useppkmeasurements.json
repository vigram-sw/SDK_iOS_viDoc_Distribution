{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/UsePPKMeasurements"},"variants":[{"paths":["\/documentation\/vigramsdk\/useppkmeasurements"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"roleHeading":"Article","title":"Use UBX PPK Measurements","modules":[{"name":"VigramSDK"}],"role":"article"},"hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"]]},"primaryContentSections":[{"kind":"content","content":[{"anchor":"","type":"heading","level":2,"text":""},{"inlineContent":[{"type":"text","text":"If you need use PPK Measurements first need to activate RXM messages, performing this method:"}],"type":"paragraph"},{"syntax":"swift","code":["peripheral.changeStatusRXM(activate: Bool)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: activate - enable \/ disable RXM messages"}]},{"type":"paragraph","inlineContent":[{"text":"To receive UBX-RXM-RAWX or UBX-RXM-SFRBX messages use:","type":"text"}]},{"syntax":"swift","code":["peripheral.satelliteMessages.sink(receiveValue: { satelliteMessage in","    switch satelliteMessage {","        case let .rawx(rawxMessage):","            \/\/ do something with rawxMessage","        case let .sfrbx(sfrbxMessage):","            \/\/ do something with sfrbxMessage","        default:","            break","        }","    }).store(in: &subscription)"],"type":"codeListing"},{"inlineContent":[{"text":"If need to record PPK measurement to file, first create URL path for ubx file.","type":"text"},{"type":"text","text":" "},{"text":"Example:","type":"text"}],"type":"paragraph"},{"code":["var path: URL? \/\/ Path for logger file.","\/\/ For example let file = \"file.ubx\"","let file = \"Filename\" + \".\" + \"file extension\" ","","let fileManager = FileManager.default","let directory = fileManager.urls(","    for: .documentDirectory, ","    in: .userDomainMask",")","","if directory.count != 0  {","    path = directory[0].appendingPathComponent(\"Name directory\")","    if let path = path?.path {","        if !fileManager.fileExists(atPath: path) {","            do {","                try fileManager.createDirectory(","                    atPath: path, ","                    withIntermediateDirectories: true, ","                    attributes: nil","                )","            } catch {","                print(\"Error: \\(error.localizedDescription)\")","            }","        }","    }","    path = path?.appendingPathComponent(file)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"After then, start record measurements perform this method"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["peripheral.startRecordPPKMeasurements(url: ubxFilePath)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Record is active."},{"type":"text","text":" "},{"text":"If you need to stop record measurements perform this method","type":"text"}]},{"code":["peripheral.stopRecordPPKMeasurements()"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All messages will saving to file"}]}]}],"references":{"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"kind":"symbol","title":"VigramSDK","role":"collection","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/vigramsdk","abstract":[],"type":"topic"},"logo.png":{"type":"image","alt":"Vigram logo.","identifier":"logo.png","variants":[{"url":"\/images\/com.vigram.VigramSDK\/logo.png","traits":["1x","light"]}]}}}